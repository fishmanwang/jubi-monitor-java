<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jubi.dao.DepthDao">
  <resultMap id="BaseResultMap" type="com.jubi.dao.entity.Depth">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pk" jdbcType="INTEGER" property="pk" />
    <result column="coin" jdbcType="VARCHAR" property="coin" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jubi.dao.entity.DepthWithBLOBs">
    <result column="asks" jdbcType="LONGVARCHAR" property="asks" />
    <result column="bids" jdbcType="LONGVARCHAR" property="bids" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pk, coin, price
  </sql>
  <sql id="Blob_Column_List">
    asks, bids
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jubi.dao.entity.DepthExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jb_coin_depth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jubi.dao.entity.DepthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jb_coin_depth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jb_coin_depth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jb_coin_depth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jubi.dao.entity.DepthWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jb_coin_depth (pk, coin, price, 
      asks, bids)
    values (#{pk,jdbcType=INTEGER}, #{coin,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{asks,jdbcType=LONGVARCHAR}, #{bids,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jubi.dao.entity.DepthWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jb_coin_depth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pk != null">
        pk,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="asks != null">
        asks,
      </if>
      <if test="bids != null">
        bids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pk != null">
        #{pk,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="asks != null">
        #{asks,jdbcType=LONGVARCHAR},
      </if>
      <if test="bids != null">
        #{bids,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update jb_coin_depth
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pk != null">
        pk = #{record.pk,jdbcType=INTEGER},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.asks != null">
        asks = #{record.asks,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bids != null">
        bids = #{record.bids,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update jb_coin_depth
    set id = #{record.id,jdbcType=INTEGER},
      pk = #{record.pk,jdbcType=INTEGER},
      coin = #{record.coin,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      asks = #{record.asks,jdbcType=LONGVARCHAR},
      bids = #{record.bids,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jb_coin_depth
    set id = #{record.id,jdbcType=INTEGER},
      pk = #{record.pk,jdbcType=INTEGER},
      coin = #{record.coin,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jubi.dao.entity.DepthWithBLOBs">
    update jb_coin_depth
    <set>
      <if test="pk != null">
        pk = #{pk,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="asks != null">
        asks = #{asks,jdbcType=LONGVARCHAR},
      </if>
      <if test="bids != null">
        bids = #{bids,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jubi.dao.entity.DepthWithBLOBs">
    update jb_coin_depth
    set pk = #{pk,jdbcType=INTEGER},
      coin = #{coin,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      asks = #{asks,jdbcType=LONGVARCHAR},
      bids = #{bids,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jubi.dao.entity.Depth">
    update jb_coin_depth
    set pk = #{pk,jdbcType=INTEGER},
      coin = #{coin,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithPageBounds" parameterType="com.jubi.dao.entity.DepthExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jb_coin_depth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithPageBounds" parameterType="com.jubi.dao.entity.DepthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jb_coin_depth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>